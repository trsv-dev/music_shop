volumes:
  pg_data:
  static:
  media:
  redis_data:
  workers_data:
  flower_data:

services:
  backend:
    container_name: music_shop_backend
    build: ./backend/
    command: |
      bash -c 'gunicorn --bind 0:10000 music_shop.wsgi'
    env_file:
      - .env
    volumes:
      - static:/app/static/
      - media:/app/media/
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: music_shop_postgres
    image: postgres:16-alpine
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data

  nginx:
    container_name: music_shop_nginx
    build: ./gateway/
    volumes:
      - static:/app/static/
      - media:/app/media/
    ports:
      - ${NGINX_PORT}:80
    depends_on:
      backend:
        condition: service_started

  redis:
    container_name: music_shop_redis
    image: redis:7.2-alpine
    env_file:
      - .env
    volumes:
      - redis_data:/data

  flower:
    container_name: music_shop_flower
    image: mher/flower:2.0.0
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - FLOWER_PORT=${FLOWER_PORT}
      - FLOWER_BASIC_AUTH=${FLOWER_USER}:${FLOWER_PASSWORD}
    ports:
      - ${FLOWER_PORT}:5555
    volumes:
      - flower_data:/data
    depends_on:
      - celery_worker_queue
    restart: always

  celery_worker_queue:
    container_name: music_shop_celery_worker_queue
    build: ./backend/
    env_file:
      - .env
    hostname: celery_worker_queue
    entrypoint: celery
    command: -A music_shop.celery worker -l info -n celery_worker_queue
    volumes:
      - workers_data:/app/workers_data
    links:
      - redis
    depends_on:
      - redis
      - backend